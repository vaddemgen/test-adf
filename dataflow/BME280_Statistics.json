{
	"name": "BME280_Statistics",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BME280_Metrics",
						"type": "DatasetReference"
					},
					"name": "BME280Metrics"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "BME280_Transformations",
						"type": "DatasetReference"
					},
					"name": "OverwriteToAvro"
				}
			],
			"transformations": [
				{
					"name": "AddDateColumn"
				},
				{
					"name": "Average"
				},
				{
					"name": "SortByDate"
				},
				{
					"name": "DateToString"
				}
			],
			"scriptLines": [
				"source(output(",
				"          celsiusTemp as double,",
				"          fahrenheitTemp as double,",
				"          pressure as double,",
				"          humidity as double,",
				"          timestamp as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss.SSS\\'Z\\''",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BME280Metrics",
				"BME280Metrics derive(date = toDate(timestamp)) ~> AddDateColumn",
				"AddDateColumn aggregate(groupBy(date),",
				"     avgCelsiusTemp = avg(celsiusTemp),",
				"          avgHumidity = avg(humidity),",
				"          avgPressure = avg(pressure)) ~> Average",
				"Average sort(desc(date, true)) ~> SortByDate",
				"SortByDate cast(output(",
				"          date as string",
				"     ),",
				"     errors: true) ~> DateToString",
				"DateToString sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OverwriteToAvro"
			]
		}
	}
}